;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by â€˜savehistâ€™.

(setq savehist-minibuffer-history-variables '(helm-apropos-history dired-shell-command-history org-link--history gud-gdb-history helm-M-x-input-history lsp-rename-history grep-regexp-history face-name-history imenu--history-list consult--man-history consult--grep-history bookmark-history xref--read-identifier-history read-char-history eglot-command-history read-number-history eww-prompt-history compile-history read-expression-history input-method-history embark--prompter-history woman-topic-history org-read-date-history evil-ex-history shell-command-history command-history coding-system-history grep-find-history yes-or-no-p-history minibuffer-history consult--line-history consult--find-history consult-imenu--history consult--buffer-history buffer-name-history extended-command-history file-name-history))
(setq gud-gdb-history '("gdb 02_hollow_rectangle" "02_hollow_rectangle" "gdb 02_hollow_rectangle" "02_hollow_rectangle.cpp" "gdb 02_hollow_rectangle.cpp" "gdb -i=mi hello"))
(setq helm-M-x-input-history '("ftp"))
(setq face-name-history '("isearch" "button" "match" "highlight" "region" "header-line" "avy-background-face" "lsp-ui-doc-background" "avy-background-face" "org-block-begin-line" "org-block-end-line" "org-block" "org-block-end-line" "org-block-begin-line" "org-block" "org-block-end-line" "org-block-begin-line" "org-block-end-line" "org-block-begin-line" "org-block" "org-block-begin-line" "org-block" "bold" "org-block-end-line" "org-block-begin-line" "org-block" "org-block-begin-line" "org-block-end-line" "org-block" "org-inline-src-block" "org-block"))
(setq consult--man-history '("#" "#con"))
(setq consult--grep-history '("#elp" "#" "#10" "#elp" "#elpa"))
(setq bookmark-history '("todo" "workspaces" "todo" "workspaces" "workspaces" "todo" "workspaces" "todo"))
(setq xref--read-identifier-history '("my-move-point-and-print"))
(setq read-char-history '("u" "x" "i" "t" "f" "o"))
(setq eglot-command-history '("typescript-language-server --stdio"))
(setq read-number-history '("78" "p" "78"))
(setq eww-prompt-history '("find sex" "pornhub" "google.com" "xvideos.com"))
(setq compile-history '("g++ 02_hollow_rectangle.cpp" "g++ 02_hollow_rectangle.cpp -o 02_hollow_rectangle" "g++ 02_hollow_rectangle.cpp" "g++ rectangle.cpp -o rectangle" "g++ hello.cpp -o hello" "make -k " "g++ hello.cpp -o hello" "g++ hello.cpp -0 hello" "g++ day01.cpp" "make -k hello.cpp test" "make -k hello.cpp" "make -k" "make -test" "make test" "make " "make -k test" "make -k "))
(setq read-expression-history '("( + ( + 2 2 2) (+ 2 2 2) )" "(/ 2 2)" "(
                        font=\"FontAwesome\",
                        text=\" ïƒ¤ \",
               #          foreground=colors[6],
#                #          background=colors[1],
#                #          padding = 0,
#                #          fontsize=16
#                #          ),
                widget.TextBox(
                        font=\"FontAwesome\",
                        text=\" ïˆ³ \",
                        foreground=colors[4],
                        background=colors[1],
                        padding = 0,
                        fontsize=16
                        ),
                
                widget.CPU(
                    format='CPU: {load_percent:.0f}%',
                    fontsize=12,foreground=\"#ffffa9\",
                    fmt=\"<b>{}</b>\"
                ),

                widget.ThermalSensor(
                    tag_sensor=\"Tctl\",
                    format=' | {temp:.0f}{unit}',
                    **powerline_left,
                    fontsize=12,
                    fmt='<b>{}</b>',
                    foreground=\"#ffffa9\"
                ),
                
                widget.Memory(
                    fmt='<b>{}</b>',format='RAM:{MemUsed: .0f}{mm} / 16000{mm}',
                    padding=5,**powerline_left,
                    background=\"#14a2ff\",foreground=\"#000000\",fontsize=12
                ),

                widget.Prompt(),
                
                widget.Chord(
                    chords_colors={
                        \"launch\": (\"#ff0000\", \"#ffffff\"),
                    },
                    name_transform=lambda name: name.upper(),
                ),
            
                widget.Systray(
                    foreground=\"#000000\",
                    background=\"#780000\",**powerline_right,
                    padding=5,icon_size=20
                ),
              
                widget.Clock(
                    fmt=\"<b>{}</b>\",
                    format=\"%d-%m-%Y %a %I:%M %p \",
                    **powerline_right,background=\"#bb4504\",
                    fontsize=12,foreground=\"#ffffa9\"
                ),
                  
            ]"))
(setq evil-ex-history '("q" "wq"))
(setq shell-command-history '("/bin/fish" "neofetch" "whereis hello.py" "ls" "/bin/fish" "/bin/bash" "/bin/fish"))
(setq command-history '((magit #11="~/development/" '((59 . 30) ((#1="/home/kishancjx/development/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote font-lock-face magit-branch-remote))) . "refs/remotes/origin/master") ((#1# #2="rev-parse" #3="--short" "HEAD~") . "2d61bb2") ((#1# #2# #3# "HEAD") . "9b3083c") ((#1# #4="rev-parse" #5="--verify" "HEAD~10")) ((#1# magit-get-upstream-branch nil) . #("origin/master" 0 13 (face magit-branch-remote font-lock-face magit-branch-remote))) ((#1# magit-get-push-branch nil nil)) ((#1# #4# #5# "refs/stash")) ((#1# "rev-parse" "--is-bare-repository") . "false
") (#1# . "2.44.0") ((#1# magit-gitdir) . "/home/kishancjx/development/.git/") (("/home/kishancjx/development/" #10="rev-parse" "--git-dir") . ".git") ((#1# "describe" "--contains" "HEAD")) ((#1# "describe" "--long" "--tags")) ((#1# magit-get-push-branch #6="master" nil)) ((#1# #7="log" #8="--no-walk" "--format=%s" #("origin/master^{commit}" 0 13 (font-lock-face magit-branch-remote face magit-branch-remote)) #9="--") . "changes") ((#1# magit-get-upstream-branch #6#) . #("origin/master" 0 13 (face magit-branch-remote font-lock-face (magit-branch-upstream magit-branch-remote)))) ((#1# #2# "--verify" "--abbrev-ref" "master@{upstream}") . "origin/master") ((#1# #7# #8# "--format=%h %s" "HEAD^{commit}" #9#) . "9b3083c changes") ((#1# "symbolic-ref" "--short" "HEAD") . #6#) ((#1# #4# #5# "HEAD") . "9b3083c85c017cef0ef727568453ee373c89bddd") (("/home/kishancjx/development/cpplearn/DSA/StarPattern/" #10# "--show-toplevel") . "/home/kishancjx/development") ((#1# . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("user.name" ("kishancjx") "user.email" ("kishancjx@gmail.com") "safe.directory" ("/mnt/hdd500/Linuxfiles/config/qtile/" "/mnt/hdd500/Linuxfiles/config/qtile") "credential.helper" ("cache") "filter.lfs.required" ("true") "filter.lfs.clean" ("git-lfs clean -- %f") "filter.lfs.smudge" ("git-lfs smudge -- %f") "filter.lfs.process" ("git-lfs filter-process") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "lfs.repositoryformatversion" ("0") "remote.origin.url" ("https://github.com/kishancjx/Machine-DevCode.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/home/kishancjx/development/" . magit-toplevel) . #1#) ((#11# . magit-toplevel) . "/home/kishancjx/development/") ((#12="/home/kishancjx/development/" #10# "--show-cdup") . #13="") ((#12# #10# #16="--show-toplevel") . "/home/kishancjx/development") ((#14="/home/kishancjx/" "config" "--get-color" #13# "reset") . "[m") ((#14# . magit-toplevel)) ((#15="/home/kishancjx/" #10# "--git-dir")) ((#15# #10# #16#)))) (execute-extended-command nil "magit" "mag") (eshell nil) (execute-extended-command nil "eshell" "es") (find-file "~/development/cpplearn/DSA/StarPattern/11_number_pattern.cpp" t) (find-file "~/development/cpplearn/test.cpp" t) (company-mode 'toggle) (execute-extended-command nil "company-mode" "cp") (find-file "~/.config/qtile/config.py" t) (find-file "~/.emacs.d/README.org" t) (find-file "~/development/python projects/productivity/main.py" t) (find-file "~/.config/qtile/config.py" t) (find-file "~/ORGFILES/plans/youtube/new.org" t) (find-file "~/ORGFILES/plans/youtube/scrathideas.org" t) (find-file "~/development/python projects/productivity/main.py" t) (find-file "~/development/python projects/productivity/main.py" t) (find-file "~/.config/qtile/" t) (find-file "~/development/cpplearn/hello.cpp" t) (eshell nil) (execute-extended-command nil "eshell" "eshe") (find-file "~/development/cpplearn/test.cpp" t) (kill-buffer "hello.cpp") (find-file "~/development/cpplearn/hello.cpp" t) (find-file "~/bhakti/shivatandav.org" t) (find-file "~/bhakti/shivatandav.org" t) (find-file "~/development/college/cmc.org" t) (find-file "~/bhakti/shivatandav.org" t) (find-file "~/ORGFILES/" t) (kill-buffer "future.org") (find-file "~/motivation/future.org" t) (find-file "~/bhakti/shivatandav.org" t) (find-file "~/development/python projects/productivity/main.py" t) (find-file "~/bhakti/shivatandav.org" t) (find-file "~/development/college/os.org" t) (find-file "~/bhakti/shivatandav.org" t) (find-file "~/development/cpplearn/DSA/course/MapImp.js" t) (find-file "~/bhakti/shivatandav.org" t) (find-file "~/bhakti/shivatandav.org" t) (find-file "~/bhakti/" t) (find-file "~/ORGFILES/plans/youtube/tutorialHell.org" t) (kill-buffer "recentf.org") (kill-buffer "imageorg") (kill-buffer "development") (kill-buffer "college") (kill-buffer ".dmrc") (find-file "~/ORGFILES/plans/youtube/febplans.org" t) (find-file "~/ORGFILES/plans/youtube/scrathideas.org" t) (kill-buffer "future.org") (find-file "~/motivation/future.org" t) (find-file "~/development/cpplearn/DSA/StarPattern/07_butterfly.cpp" t) (find-file "~/bhakti/shivatandav.org" t) (find-file "~/Youtube/fat.org" t) (find-file "~/Youtube/" t) (find-file "~/motivation/future.org" t) (execute-extended-command nil "narrow-to-region" "narrow") (execute-extended-command nil "narrow-to-region" "nar") (execute-extended-command nil "narrow-to-region" "narrow") (execute-extended-command nil "narrow-to-page" "n") (execute-extended-command nil "narrow-to-page" "narrow") (find-file "~/development/cpplearn/DSA/course/mergeSortedAr.js" t) (eshell nil) (execute-extended-command nil "eshell" "eshe") (find-file "~/development/cpplearn/DSA/course/arrayImp.js" t) (kill-buffer "*scratch*") (kill-buffer "*scratch*") (kill-buffer "*scratch*") (kill-buffer "*Messages*") (kill-buffer "*scratch*") (kill-buffer "DSA") (kill-buffer "cpplearn") (kill-buffer "development") (kill-buffer "kishancjx") (kill-buffer "bhakti") (kill-buffer "shivatandav.org") (consult-yank-from-kill-ring #("this.data[this.length-1]" 0 1 (font-lock-face font-lock-builtin-face fontified t) 1 4 (font-lock-face font-lock-builtin-face fontified t) 4 5 (fontified t) 5 9 (font-lock-face js2-object-property-access fontified t) 9 10 (fontified t) 10 14 (font-lock-face font-lock-builtin-face fontified t) 14 15 (fontified t) 15 21 (font-lock-face js2-object-property-access fontified t) 21 23 (fontified t) 23 24 (fontified t)) nil) (eshell nil) (execute-extended-command nil "eshell" "eshe") (find-file "~/development/cpplearn/DSA/course/arrayImp.js" t) (find-file "~/development/cpplearn/DSA/course/first.js" t) (find-file "~/development/cpplearn/DSA/course/reverse.js" t) (kill-buffer "]") (company-mode 'toggle) (execute-extended-command nil "company-mode" "compan") (company-box-mode 'toggle) (execute-extended-command nil "company-box-mode") (company-box-mode 'toggle) (execute-extended-command nil "company-box-mode") (company-box-mode 'toggle) (execute-extended-command nil "company-box-mode" "compan") (eshell nil) (execute-extended-command nil "eshell" "el") (find-file "~/development/cpplearn/DSA/course/test.py" t) (find-file "~/development/cpplearn/DSA/course/first.js" t) (org-mode) (execute-extended-command nil "org-mode" "org") (kill-buffer "*Buffer List*") (find-file "~/development/cpplearn/DSA/course/" t) (find-file "~/bhakti/shivatandav.org" t) (eshell nil) (execute-extended-command nil "eshell" "esh")))
(setq coding-system-history '("utf-8"))
(setq grep-find-history '("calo"))
(setq yes-or-no-p-history '("yes" "no" "yes" "no" "yes" "no" "yes"))
(setq minibuffer-history '("yes" "other-window" "yes" "/home/kishancjx/.emacs.d/" "yes" "~/development/" "tetris" "undo-redo" "undo" "undo-redo" "undo" "yes" "~/development/" "yes" "c++" "~/development/" "/home/kishancjx/.emacs.d/" "~/development/" "~/.emacs.d/" "yes" "... (choose a dir)" "yes" "save and then kill" "/home/kishancjx/.emacs.d/" "save and then kill" "... (choose a dir)" "yes" "... (choose a dir)" "/home/kishancjx/.emacs.d/" "... (choose a dir)" "/home/kishancjx/.emacs.d/" "... (choose a dir)" "/home/kishancjx/.emacs.d/" "kishancjx" "2" "12" "5" "4" "/mnt/hdd250/ORGMODE/everydayTODO.org" "yes" "~/.emacs.d/README.org" "yes" "8" "20" "workspaces" "todo" "https://github.com/tree-sitter/tree-sitter-python" "python" "yes" "no" "append-to-buffer" "push-mark" "goto-char" "... (choose a dir)" "save and then kill" "kishan" "magesh" "kishan" "function" "current-buffer" "buffer-size" "switch-to-buffer" "buffer-size" "yes" "python" "+" "rust-ts-mode                   Not available in menu functions Init file" "yes" "~/.emacs.d/" "http://www.youtube.com" "... (choose a dir)" "yes" "/mnt/hdd250/CODES/webdevlearn/amazonclone/Amazon-Clone/index.html" "yes" "rust-analyzer" "... (choose a dir)" "/home/kishancjx/.emacs.d/" "... (choose a dir)" "https://github.com/tree-sitter/tree-sitter-rust" "rust" "... (choose a dir)" "yes" "/mnt/hdd250/CODES/webdevlearn/amazonclone/Amazon-Clone/" "yes" "no" "~/.config/qtile/config.py" "... (choose a dir)" "~/.config/qtile/autostart.fish" "~/.config/qtile/config.py" "kishanc" "yes" "... (choose a dir)" "~/.emacs.d/" "/home/kishancjx/.emacs.d/" "git" "magit" "~/.config/qtile/config.org" "yes" "RedDark" "exotica"))
(setq consult--line-history '("org" "or"))
(setq consult--find-history '("ini" "#" "#config" "#pico" "#"))
(setq consult-imenu--history '("Shiva Tandav Stotram by Raavan Shloka 15" "Completion Systems Company Mode" "My Custom Stuff" "ORG MODE Enabling Code Blocks Background" "*TABLE OF CONTENTS*" "ORG MODE Enabling Table of Contents" "*TABLE OF CONTENTS*" "GUI (GRAPHICAL USER INTERFACE) TWEAKS Fonts" "test (def) (1)" "make_window_borderless (def)" "checkwindowmin (def)" "Development Tools Eglot (its something like a LSP)" "Development Tools Magit (git integration in emacs)" "General Keybindings" "*TABLE OF CONTENTS*" "Top Bar and Its WIDGETS" "Imports of Libraries" "Development Tools Python's Tools:" "Development Tools Magit (git integration in emacs)" "LOADING ESSENTIAL STUFF Evil Mode" "Development Tools Magit (git integration in emacs)" "** Magit (git integration in emacs)" "** Evil Mode" "*** Elpy" "* GUI (GRAPHICAL USER INTERFACE) TWEAKS" "** Elpaca Package Manager" "* All Keybindings" "* Imports of Libraries" "* Variables of the Program" "* Table of contents :toc:" "** Auto Tangle" "* ORG MODE" "* Dragging Mode" "** Orderless"))
(setq consult--buffer-history '("*scratch*øˆ€€‚" "test.cppøˆ€€‚" "*eshell*øˆ€€‚" "test.cppøˆ€€‚" "first.jsøˆ€€‚" "]øˆ€€‚" "test.pyøˆ€€‚" "]" "*scratch*øˆ€€‚" "first.jsøˆ€€‚" "README.orgøˆ€€‚" "*eshell*øˆ€€‚" "first.jsøˆ€€‚" "new.orgøˆ€€‚" "recentf.orgøˆ€€‚" "plansøˆ€€‚" "youtubeøˆ€€‚" "plansøˆ€€‚" "*scratch*øˆ€€‚" "DSAøˆ€€‚" "*scratch*øˆ€€‚" "*Customize Face: Highlight*øˆ€€‚" "*Colors*øˆ€€‚" "*Customize Group: Elpaca Ui*øˆ€€‚" "*Customize Group: Beacon*øˆ€€‚" "*info*øˆ€€‚" "first.jsøˆ€€‚" "*eshell*øˆ€€‚" "first.jsøˆ€€‚" "*scratch*øˆ€€‚" "*eshell*øˆ€€‚" "first.jsøˆ€€‚" "first.cppøˆ€€‚" "*eshell*øˆ€€‚" "first.cppøˆ€€‚" "*eshell*øˆ€€‚" "first.cppøˆ€€‚" "*eshell*øˆ€€‚" "first.cppøˆ€€‚" "*eshell*øˆ€€‚" "first.cppøˆ€€‚" "*eshell*øˆ€€‚" "first.cppøˆ€€‚" "*eshell*øˆ€€‚" "first.cppøˆ€€‚" "*eshell*øˆ€€‚" "first.cppøˆ€€‚" "*eshell*øˆ€€‚" "first.cppøˆ€€‚" "*eshell*øˆ€€‚" "first.cppøˆ€€‚" "*eshell*øˆ€€‚" "first.cppøˆ€€‚" "*eshell*øˆ€€‚" "first.cppøˆ€€‚" "*eshell*øˆ€€‚" "first.cppøˆ€€‚" "*eshell*øˆ€€‚" "first.cppøˆ€€‚" "*eshell*øˆ€€‚" "first.cppøˆ€€‚" "*eshell*øˆ€€‚" "first.cppøˆ€€‚" "*eshell*øˆ€€‚" "first.cppøˆ€€‚" "*eshell*øˆ€€‚" "12_palindromic.cppøˆ€€‚" "11_number_pattern.cppøˆ€€‚" "03_inverted_half_pyramid.cppøˆ€€‚" "learning.orgøˆ€€‚" "02_hollow_rectangle.cppøˆ€€‚" "01_rectangle.cppøˆ€€‚" "learning.orgøˆ€€‚" "01_rectangle.cppøˆ€€‚" "learning.orgøˆ€€‚" "01_rectangle.cppøˆ€€‚" "*scratch*øˆ€€‚" "febplans.orgøˆ€€‚" "*scratch*øˆ€€‚" "febplans.orgøˆ€€‚" "*scratch*øˆ€€‚" "hello.cppøˆ€€‚" "*eshell*øˆ€€‚" "hello.cppøˆ€€‚" "*Customize Face: Lsp Ui Doc Background*øˆ€€‚" "hello.cppøˆ€€‚" "*Customize Face: Lsp Ui Doc Background*øˆ€€‚" "hello.cppøˆ€€‚" "07_butterfly.cppøˆ€€‚" "*eshell*øˆ€€‚" "07_butterfly.cppøˆ€€‚" "*eshell*øˆ€€‚" "07_butterfly.cppøˆ€€‚" "*eshell*øˆ€€‚" "07_butterfly.cppøˆ€€‚" "*eshell*øˆ€€‚" "07_butterfly.cppøˆ€€‚" "*eshell*øˆ€€‚" "07_butterfly.cppøˆ€€‚" "*eshell*øˆ€€‚"))
(setq buffer-name-history '("*scratch*" "test.cpp" "*eshell*" "test.cpp" "hello.cpp" "future.org" "recentf.org" "imageorg" "development" "college" ".dmrc" "future.org" "*scratch*" "*Messages*" "*scratch*" "DSA" "cpplearn" "development" "kishancjx" "bhakti" "shivatandav.org" "first.js" "]" "test.py" "]" "*scratch*" "*Buffer List*" "first.js" "README.org" "init.el" "*eshell*" "first.js" "new.org" "scrathideas.org" "DSA" "cpplearn" "development" "Emacs" "Youtube" "kishancjx" "ORGFILES" "scrathideas.org" "recentf.org" "plans" "youtube" "plans" "*clangd*" "*clangd::stderr*" "*lsp-log*" "*Messages*" "*scratch*" "cpplearn" "DSA" "01-Insertion-Sort.cpp" "*scratch*" "DSA" "*scratch*" "*Customize Face: Isearch*" "*Customize Face: Button*" "*Customize Face: Match*" "*Colors*" "*Customize Face: Highlight*" "faces.el.gz" "*Colors*" "*Customize Face: Region*" "*Customize Browser*" "init.el" "*Customize Group: Emacs*" "*Customize Apropos*" "*scratch*" "*Warnings*" "*eldoc*" "*Buffer List*" "*Messages*" "*prettier errors*" "*tide-documentation*" "*tide-server*" "*Messages*" "*scratch*" "*Customize Group: Which Func*" "*Customize Group: Glasses*" "*Customize Group: Lsp Ui Imenu*" "*Customize Group: Tools*" "*Customize Group: Programming*" "*Customize Group: Editing Basics*" "*Customize Group: Editing*" "*Customize Group: Company*" "*Customize Group: General*" "*Customize Group: Lsp Ui*" "*Customize Group: Lsp Ui Doc*" "*Customize Group: Bind Key*" "*Customize Group: Vertico Faces*" "*Customize Group: Vertico*" "*Customize Group: Windmove*" "*Customize Group: Convenience*" "*Customize Group: Wp*" "*Customize Group: Text*" "*Customize Group: Data*" "*Customize Group: Communication*" "*eshell*"))
(setq extended-command-history '("magit" "eshell" "company-mode" "eshell" "narrow-to-region" "narrow-to-page" "eshell" "company-mode" "company-box-mode" "eshell" "org-mode" "eshell" "yas-minor-mode-on" "yas-minor-mode" "global-set-key" "eshell" "recover-this-file" "eshell" "org-mode" "recover-this-file" "eshell" "global-set-key" "describe-key" "customize-face" "customize-browse" "customize" "customize-mode" "mpc" "elpaca-ui-mode" "ibuffer" "describe-personal-keybindings" "tab-bar-mode" "glasses-mode" "which-function-mode" "xref-go-back" "help-go-back" "xref-go-back" "beacon-mode" "customize" "eldoc" "global-set-key" "eshell" "package-list-packages" "company-box-mode" "company-mode" "company-box-mode" "company-mode" "eshell" "eshell-kill-process" "eshell" "recover-this-file" "company-files" "company-mode" "company-files" "project-eshell" "global-set-key" "eshell" "local-set-key" "global-set-key" "local-set-key" "minimize-window" "dired-do-man" "recentf" "company-box-mode" "eshell" "company-box-mode" "recover-this-file" "org-toggle-inline-images" "org-latex-export-to-pdf" "describe-char" "org-mode" "company-box-mode" "company-mode" "eshell" "customize-face" "lsp-ui-mode" "customize-face" "avy-pop-mark" "avy-next" "avy-isearch" "customize-face" "eshell" "lsp" "recentf" "eshell" "toggle-frame-fullscreen" "toggle-scroll-bar" "make-frame" "lsp-headerline-breadcrumb-mode" "avy-isearch" "company-box-mode" "company-mode" "eshell" "compile" "eshell" "compile" "eshell" "compile" "eshell" "compile"))
(setq file-name-history '("~/development/cpplearn/DSA/" "~/development/" "~/development/cpplearn/DSA/StarPattern/11_number_pattern.cpp" "~/development/cpplearn/test.cpp" "~/.config/qtile/config.py" "~/.emacs.d/README.org" "~/development/python projects/productivity/main.py" "~/development/cpplearn/DSA/" "~/.config/qtile/config.py" "~/ORGFILES/plans/youtube/new.org" "~/ORGFILES/plans/youtube/scrathideas.org" "~/development/python projects/productivity/main.py" "~/.config/qtile/" "~/development/cpplearn/DSA/" "~/development/cpplearn/hello.cpp" "~/development/cpplearn/test.cpp" "~/development/cpplearn/hello.cpp" "~/development/cpplearn/DSA/" "~/bhakti/shivatandav.org" "~/development/cpplearn/DSA/" "~/bhakti/shivatandav.org" "~/development/cpplearn/DSA/" "~/development/college/cmc.org" "~/bhakti/shivatandav.org" "~/development/cpplearn/DSA/" "~/ORGFILES/" "~/motivation/future.org" "~/bhakti/shivatandav.org" "~/development/cpplearn/DSA/" "~/development/python projects/productivity/main.py" "~/development/cpplearn/DSA/" "~/bhakti/shivatandav.org" "~/development/cpplearn/DSA/" "~/development/college/os.org" "~/bhakti/shivatandav.org" "~/development/cpplearn/DSA/" "~/development/cpplearn/DSA/course/MapImp.js" "~/development/cpplearn/DSA/" "~/bhakti/shivatandav.org" "~/development/cpplearn/DSA/" "~/bhakti/" "~/ORGFILES/plans/youtube/tutorialHell.org" "~/development/cpplearn/DSA/" "~/ORGFILES/plans/youtube/febplans.org" "~/ORGFILES/plans/youtube/scrathideas.org" "~/motivation/future.org" "~/development/cpplearn/DSA/StarPattern/07_butterfly.cpp" "~/development/cpplearn/DSA/" "~/bhakti/shivatandav.org" "~/development/cpplearn/DSA/" "~/Youtube/fat.org" "~/Youtube/" "~/development/cpplearn/DSA/" "~/motivation/future.org" "~/development/cpplearn/DSA/course/mergeSortedAr.js" "~/development/cpplearn/DSA/course/arrayImp.js" "~/development/cpplearn/DSA/" "~/development/cpplearn/DSA/course/arrayImp.js" "~/development/cpplearn/DSA/" "~/development/cpplearn/DSA/course/first.js" "~/development/cpplearn/DSA/" "~/development/cpplearn/DSA/course/reverse.js" "~/development/cpplearn/DSA/course/test.py" "~/development/cpplearn/DSA/course/first.js" "~/motivation/future.org" "~/development/cpplearn/DSA/" "~/development/cpplearn/DSA/course/" "~/development/cpplearn/DSA/" "~/bhakti/shivatandav.org" "~/development/cpplearn/DSA/" "~/development/cpplearn/hello.cpp" "~/development/cpplearn/DSA/" "~/development/cpplearn/DSA/course/first.js" "~/.emacs.d/init.el" "~/.emacs.d/README.org" "~/development/cpplearn/DSA/" "~/ORGFILES/plans/youtube/new.org" "~/development/cpplearn/DSA/" "~/ORGFILES/plans/youtube/febplans.org" "~/ORGFILES/plans/recentf.org" "~/ORGFILES/plans/youtube/scrathideas.org" "~/ORGFILES/plans/youtube/new.org" "~/development/cpplearn/DSA/" "~/tempfiles/ppt.org" "~/tempfiles/" "~/development/cpplearn/DSA/" "~/development/cpplearn/DSA/course/first.js" "~/.emacs.d/README.org" "~/.emacs.d/init.el" "~/development/cpplearn/DSA/course/first.js" "~/.emacs.d/README.org" "~/.emacs.d/README.el" "~/.emacs.d/init.el" "~/.emacs.d/README.org" "~/development/cpplearn/DSA/course/first.js" "~/.emacs.d/README.org" "~/development/cpplearn/DSA/course/first.js" "~/development/cpplearn/DSA/course/first.cpp" "~/bhakti/shivatandav.org" "~/development/cpplearn/DSA/"))
